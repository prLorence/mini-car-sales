{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction PostListingComponent_input_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"input\", 15);\n  }\n}\nfunction PostListingComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"dt\");\n    i0.ɵɵtext(2, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 16);\n    i0.ɵɵelementStart(4, \"dt\");\n    i0.ɵɵtext(5, \"Phone\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 17);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.nonDealerDetailsForm);\n  }\n}\nfunction PostListingComponent_ng_template_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9)(1, \"dt\");\n    i0.ɵɵtext(2, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 16);\n    i0.ɵɵelementStart(4, \"dt\");\n    i0.ɵɵtext(5, \"Phone\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 17);\n    i0.ɵɵelementStart(7, \"dt\");\n    i0.ɵɵtext(8, \"Email\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 18);\n    i0.ɵɵelementStart(10, \"dt\");\n    i0.ɵɵtext(11, \"ABN\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r3.dealerDetailsForm);\n  }\n}\nexport class PostListingComponent {\n  constructor(http, baseUrl) {\n    this.http = http;\n    this.baseUrl = baseUrl;\n  }\n  ngOnInit() {\n    this.initializeFormControls();\n  }\n  initializeFormControls() {\n    this.priceType = new FormGroup({\n      isDap: new FormControl(false)\n    });\n    this.dealerType = new FormGroup({\n      isDealer: new FormControl(false)\n    });\n    this.nonDealerDetailsForm = new FormGroup({\n      name: new FormControl(),\n      contactNumber: new FormControl()\n    });\n    this.dealerDetailsForm = new FormGroup({\n      name: new FormControl(),\n      contactNumber: new FormControl(),\n      email: new FormControl(),\n      abn: new FormControl()\n    });\n    this.createForm = new FormGroup({\n      year: new FormControl(),\n      make: new FormControl(),\n      model: new FormControl(),\n      comments: new FormControl(),\n      driveAwayPrice: new FormControl(0),\n      excludingGovernmentCharges: new FormControl(),\n      nonDealerDetails: this.nonDealerDetailsForm,\n      dealerDetails: this.dealerDetailsForm\n    });\n  }\n  updateListing() {\n    if (this.createForm.valid) {\n      const newListing = {\n        year: this.createForm.get('year').value,\n        make: this.createForm.get('make').value,\n        model: this.createForm.get('model').value,\n        comments: this.createForm.get('comments').value,\n        driveAwayPrice: this.createForm.get('driveAwayPrice').value ?? 0,\n        excludingGovernmentCharges: this.createForm.get('excludingGovernmentCharges').value ?? 0,\n        nonDealerDetails: {\n          name: this.nonDealerDetailsForm.get('name').value,\n          contactNumber: this.nonDealerDetailsForm.get('contactNumber').value\n        },\n        dealerDetails: {\n          name: this.dealerDetailsForm.get('name').value,\n          contactNumber: this.dealerDetailsForm.get('contactNumber').value,\n          email: this.dealerDetailsForm.get('email').value,\n          abn: this.dealerDetailsForm.get('abn').value\n        }\n      };\n      this.http.post(this.baseUrl + 'api/carlisting/create', newListing).subscribe(() => {\n        // Update successful\n        console.log('Listing updated successfully!');\n      }, error => {\n        console.error('Error updating listing:', error);\n        // Handle the error case if needed\n      });\n    }\n  }\n}\n\nPostListingComponent.ɵfac = function PostListingComponent_Factory(t) {\n  return new (t || PostListingComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nPostListingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PostListingComponent,\n  selectors: [[\"app-post-listing\"]],\n  decls: 43,\n  vars: 8,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [\"type\", \"text\", \"formControlName\", \"year\"], [\"type\", \"text\", \"formControlName\", \"make\"], [\"type\", \"text\", \"formControlName\", \"model\"], [\"formControlName\", \"comments\"], [\"type\", \"radio\", \"value\", \"show\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"radio\", \"value\", \"hide\", 3, \"ngModel\", \"ngModelChange\"], [\"formControlName\", \"driveAwayPrice\", 3, \"disabled\"], [\"formControlName\", \"excludingGovernmentCharges\", 4, \"ngIf\"], [3, \"formGroup\"], [\"formControlName\", \"isDealer\", \"type\", \"radio\", \"value\", \"false\"], [\"formControlName\", \"isDealer\", \"type\", \"radio\", \"value\", \"true\"], [3, \"formGroup\", 4, \"ngIf\", \"ngIfElse\"], [\"elseBlock\", \"\"], [\"type\", \"submit\", \"value\", \"submit\"], [\"formControlName\", \"excludingGovernmentCharges\"], [\"type\", \"text\", \"formControlName\", \"name\", \"required\", \"\"], [\"type\", \"text\", \"formControlName\", \"contactNumber\", \"required\", \"\"], [\"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\"], [\"type\", \"text\", \"formControlName\", \"abn\", \"required\", \"\"]],\n  template: function PostListingComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\");\n      i0.ɵɵtext(1, \"Post a Listing\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\")(3, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function PostListingComponent_Template_form_ngSubmit_3_listener() {\n        return ctx.updateListing();\n      });\n      i0.ɵɵelementStart(4, \"dt\");\n      i0.ɵɵtext(5, \"Year\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"input\", 1);\n      i0.ɵɵelementStart(7, \"dt\");\n      i0.ɵɵtext(8, \"Make\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 2);\n      i0.ɵɵelementStart(10, \"dt\");\n      i0.ɵɵtext(11, \"Model\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"input\", 3);\n      i0.ɵɵelementStart(13, \"dt\");\n      i0.ɵɵtext(14, \"Comments\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"textarea\", 4);\n      i0.ɵɵelementStart(16, \"div\")(17, \"dt\");\n      i0.ɵɵtext(18, \"Price\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"label\")(20, \"input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function PostListingComponent_Template_input_ngModelChange_20_listener($event) {\n        return ctx.dap = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(21, \" Show input text \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"label\")(23, \"input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function PostListingComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.dap = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(24, \" Hide input text \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(25, \"div\")(26, \"dt\");\n      i0.ɵɵtext(27, \"Drive Away Price (DAP)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(28, \"input\", 7);\n      i0.ɵɵelementStart(29, \"dt\");\n      i0.ɵɵtext(30, \"Excluding Government Charges (EGC)\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(31, PostListingComponent_input_31_Template, 1, 0, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"div\", 9)(33, \"label\");\n      i0.ɵɵelement(34, \"input\", 10);\n      i0.ɵɵtext(35, \" Non-dealer Vehicle \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"label\");\n      i0.ɵɵelement(37, \"input\", 11);\n      i0.ɵɵtext(38, \" Dealer Vehicle \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(39, PostListingComponent_div_39_Template, 7, 1, \"div\", 12);\n      i0.ɵɵtemplate(40, PostListingComponent_ng_template_40_Template, 13, 1, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n      i0.ɵɵelement(42, \"input\", 14);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      const _r2 = i0.ɵɵreference(41);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.createForm);\n      i0.ɵɵadvance(17);\n      i0.ɵɵproperty(\"ngModel\", ctx.dap);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.dap);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"disabled\", ctx.excludingGovernmentCharges !== 0);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", !ctx.priceType.isDap);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.dealerType);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", !ctx.isDealer)(\"ngIfElse\", _r2);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.RadioControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","FormGroup","i0","PostListingComponent","constructor","http","baseUrl","ngOnInit","initializeFormControls","priceType","isDap","dealerType","isDealer","nonDealerDetailsForm","name","contactNumber","dealerDetailsForm","email","abn","createForm","year","make","model","comments","driveAwayPrice","excludingGovernmentCharges","nonDealerDetails","dealerDetails","updateListing","valid","newListing","get","value","post","subscribe","console","log","error","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/phetoush/Documents/github_repos/work/OffsureAssessment/ClientApp/src/app/post-listing/post-listing.component.ts","/home/phetoush/Documents/github_repos/work/OffsureAssessment/ClientApp/src/app/post-listing/post-listing.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, Inject } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-post-listing',\n  templateUrl: './post-listing.component.html',\n  styleUrls: ['./post-listing.component.css']\n})\nexport class PostListingComponent {\n  public createForm: FormGroup;\n  public nonDealerDetailsForm: FormGroup;\n  public dealerDetailsForm: FormGroup;\n  public priceType: FormGroup;\n  public dealerType: FormGroup;\n\n  constructor(private http: HttpClient, @Inject('BASE_URL') private baseUrl: string) {\n  }\n\n  ngOnInit() {\n    this.initializeFormControls();\n  }\n\n  initializeFormControls() {\n    this.priceType = new FormGroup({\n      isDap: new FormControl(false)\n    })\n\n    this.dealerType = new FormGroup({\n      isDealer: new FormControl(false)\n    })\n\n    this.nonDealerDetailsForm = new FormGroup({\n      name: new FormControl(),\n      contactNumber: new FormControl()\n    });\n\n    this.dealerDetailsForm = new FormGroup({\n      name: new FormControl(),\n      contactNumber: new FormControl(),\n      email: new FormControl(),\n      abn: new FormControl()\n    });\n\n    this.createForm = new FormGroup({\n      year: new FormControl(),\n      make: new FormControl(),\n      model: new FormControl(),\n      comments: new FormControl(),\n      driveAwayPrice: new FormControl(0),\n      excludingGovernmentCharges: new FormControl(),\n      nonDealerDetails: this.nonDealerDetailsForm,\n      dealerDetails: this.dealerDetailsForm\n    });\n  }\n\n  updateListing() {\n    if (this.createForm.valid) {\n      const newListing: CarListing = {\n        year: this.createForm.get('year').value,\n        make: this.createForm.get('make').value,\n        model: this.createForm.get('model').value,\n        comments: this.createForm.get('comments').value,\n        driveAwayPrice: this.createForm.get('driveAwayPrice').value ?? 0,\n        excludingGovernmentCharges: this.createForm.get('excludingGovernmentCharges').value ?? 0,\n        nonDealerDetails: {\n          name: this.nonDealerDetailsForm.get('name').value,\n          contactNumber: this.nonDealerDetailsForm.get('contactNumber').value\n        },\n        dealerDetails: {\n          name: this.dealerDetailsForm.get('name').value,\n          contactNumber: this.dealerDetailsForm.get('contactNumber').value,\n          email: this.dealerDetailsForm.get('email').value,\n          abn: this.dealerDetailsForm.get('abn').value\n        },\n      };\n\n      this.http.post(this.baseUrl + 'api/carlisting/create', newListing).subscribe(\n        () => {\n          // Update successful\n          console.log('Listing updated successfully!');\n        },\n        error => {\n          console.error('Error updating listing:', error);\n          // Handle the error case if needed\n        }\n      );\n    }\n  }\n}\n\ninterface CarListing {\n  year?: string;\n  make?: string;\n  model?: string;\n  comments: string;\n  driveAwayPrice?: number;\n  excludingGovernmentCharges?: number;\n  nonDealerDetails?: {\n    name: string;\n    contactNumber: string;\n  }\n  dealerDetails?: {\n    name: string;\n    email: string;\n    contactNumber: string;\n    abn: string;\n  }\n}\n","<h1>Post a Listing</h1>\n\n\n<div>\n  <form [formGroup]=\"createForm\" (ngSubmit)=\"updateListing()\">\n    <dt>Year</dt>\n    <input type=\"text\" formControlName=\"year\"/>\n\n    <dt>Make</dt>\n    <input type=\"text\" formControlName=\"make\"/>\n\n    <dt>Model</dt>\n    <input type=\"text\" formControlName=\"model\"/>\n\n    <dt>Comments</dt>\n    <textarea formControlName=\"comments\"></textarea>\n\n    <div>\n      <dt>Price</dt>\n      <label>\n        <input type=\"radio\" [(ngModel)]=\"dap\" value=\"show\" /> Show input text\n      </label>\n      <label>\n        <input type=\"radio\" [(ngModel)]=\"dap\" value=\"hide\" /> Hide input text\n      </label>\n    </div>\n\n    <div>\n      <dt>Drive Away Price (DAP)</dt>\n      <input [disabled]=\"excludingGovernmentCharges !== 0\" formControlName=\"driveAwayPrice\"/>\n\n      <dt>Excluding Government Charges (EGC)</dt>\n      <input *ngIf=\"!priceType.isDap\" formControlName=\"excludingGovernmentCharges\"/>\n    </div>\n\n    <div [formGroup]=\"dealerType\">\n      <label>\n        <input formControlName=\"isDealer\" type=\"radio\" value=\"false\"> Non-dealer Vehicle\n      </label>\n\n      <label>\n        <input formControlName=\"isDealer\" type=\"radio\" value=\"true\"> Dealer Vehicle\n      </label>\n    </div>\n\n    <div *ngIf=\"!isDealer; else elseBlock\" [formGroup]=\"nonDealerDetailsForm\">\n      <dt>Name</dt>\n      <input type=\"text\" formControlName=\"name\" required/>\n\n      <dt>Phone</dt>\n      <input type=\"text\" formControlName=\"contactNumber\" required/>\n    </div>\n\n    <ng-template #elseBlock>\n      <div [formGroup]=\"dealerDetailsForm\">\n        <dt>Name</dt>\n        <input type=\"text\" formControlName=\"name\" required/>\n\n        <dt>Phone</dt>\n        <input type=\"text\" formControlName=\"contactNumber\" required/>\n\n        <dt>Email</dt>\n        <input type=\"email\" formControlName=\"email\" required/>\n\n        <dt>ABN</dt>\n        <input type=\"text\" formControlName=\"abn\" required/>\n      </div>\n    </ng-template>\n\n    <input type=\"submit\" value=\"submit\"/>\n\n  </form>\n</div>\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}