// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OffsureAssessment.Context;

#nullable disable

namespace OffsureAssessment.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.3.23174.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OffsureAssessment.Model.CarListing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Comments")
                        .HasColumnType("text");

                    b.Property<double>("DriveAwayPrice")
                        .HasColumnType("double precision");

                    b.Property<double>("ExcludingGovernmentCharges")
                        .HasColumnType("double precision");

                    b.Property<string>("Make")
                        .HasColumnType("text");

                    b.Property<string>("Model")
                        .HasColumnType("text");

                    b.Property<string>("Year")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("CarListings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comments = "This is a reliable car.",
                            DriveAwayPrice = 2000.5,
                            ExcludingGovernmentCharges = 0.0,
                            Make = "Toyota",
                            Model = "Vios",
                            Year = "2002"
                        },
                        new
                        {
                            Id = 2,
                            Comments = "Bought this one 2 years ago.",
                            DriveAwayPrice = 0.0,
                            ExcludingGovernmentCharges = 2005.1199999999999,
                            Make = "Honda",
                            Model = "City",
                            Year = "2018"
                        },
                        new
                        {
                            Id = 3,
                            Comments = "Condition's 10/10'",
                            DriveAwayPrice = 5000.1000000000004,
                            ExcludingGovernmentCharges = 0.0,
                            Make = "Ford",
                            Model = "Raptor",
                            Year = "2023"
                        },
                        new
                        {
                            Id = 4,
                            Comments = "Used for work commutes",
                            DriveAwayPrice = 0.0,
                            ExcludingGovernmentCharges = 1500.5,
                            Make = "Toyota",
                            Model = "Corolla Altis",
                            Year = "2023"
                        },
                        new
                        {
                            Id = 5,
                            Comments = "Contact me for more details",
                            DriveAwayPrice = 1750.5,
                            ExcludingGovernmentCharges = 0.0,
                            Make = "Honda",
                            Model = "Civic",
                            Year = "2017"
                        });
                });

            modelBuilder.Entity("OffsureAssessment.Model.DealerDetails", b =>
                {
                    b.Property<int>("DealerPropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DealerPropertyId"));

                    b.Property<string>("ABN")
                        .HasColumnType("text");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int?>("ListingId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("DealerPropertyId");

                    b.HasIndex("ListingId")
                        .IsUnique();

                    b.ToTable("DealerDetails");

                    b.HasData(
                        new
                        {
                            DealerPropertyId = 1,
                            ABN = "12321411",
                            ContactNumber = "12321421",
                            Email = "john@doe.com",
                            ListingId = 1,
                            Name = "John Doe"
                        },
                        new
                        {
                            DealerPropertyId = 2,
                            ABN = "12321521",
                            ContactNumber = "150912312",
                            Email = "alicedoe@deals.com",
                            ListingId = 3,
                            Name = "Alice Doe"
                        });
                });

            modelBuilder.Entity("OffsureAssessment.Model.NonDealerDetails", b =>
                {
                    b.Property<int>("NonDealerPropertyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("NonDealerPropertyId"));

                    b.Property<string>("ContactNumber")
                        .HasColumnType("text");

                    b.Property<int?>("ListingId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("NonDealerPropertyId");

                    b.HasIndex("ListingId")
                        .IsUnique();

                    b.ToTable("NonDealerDetails");

                    b.HasData(
                        new
                        {
                            NonDealerPropertyId = 1,
                            ContactNumber = "124521090",
                            ListingId = 2,
                            Name = "Bob Keen"
                        },
                        new
                        {
                            NonDealerPropertyId = 2,
                            ContactNumber = "124520912",
                            ListingId = 4,
                            Name = "Jane Doe"
                        },
                        new
                        {
                            NonDealerPropertyId = 3,
                            ContactNumber = "124098213",
                            ListingId = 5,
                            Name = "Kim Larwin"
                        });
                });

            modelBuilder.Entity("OffsureAssessment.Model.DealerDetails", b =>
                {
                    b.HasOne("OffsureAssessment.Model.CarListing", "CarListing")
                        .WithOne("DealerDetails")
                        .HasForeignKey("OffsureAssessment.Model.DealerDetails", "ListingId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("CarListing");
                });

            modelBuilder.Entity("OffsureAssessment.Model.NonDealerDetails", b =>
                {
                    b.HasOne("OffsureAssessment.Model.CarListing", "CarListing")
                        .WithOne("NonDealerDetails")
                        .HasForeignKey("OffsureAssessment.Model.NonDealerDetails", "ListingId")
                        .OnDelete(DeleteBehavior.ClientCascade);

                    b.Navigation("CarListing");
                });

            modelBuilder.Entity("OffsureAssessment.Model.CarListing", b =>
                {
                    b.Navigation("DealerDetails");

                    b.Navigation("NonDealerDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
